name: Release
on:
  push:
    tags:
      - "v*"
jobs:
  prepare:
    if: github.event.base_ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.ref.outputs.branch }}
      tag: ${{ steps.ref.outputs.tag }}
      version: ${{ steps.ref.outputs.version }}
      release_id: ${{ steps.release.outputs.result }}
    steps:
      - name: Set Tag and Version
        id: ref
        run: |
          echo ::set-output name=branch::${GITHUB_BASE_REF#refs/heads/}
          echo ::set-output name=tag::${GITHUB_REF#refs/*/}
          echo ::set-output name=version::${GITHUB_REF#refs/*/v}
      - name: Set Release ID
        uses: actions/github-script@v6
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          result-encoding: string
          script: |
            const { data } = await github.rest.repos.getReleaseByTag({
              owner: "${{ github.repository_owner }}",
              repo: "${{ github.event.repository.name }}",
              tag: "${{ steps.ref.outputs.tag }}"
            });
            return data.id;
  bump:
    runs-on: ubuntu-latest
    needs: [prepare]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - uses: actions-rs/install@v0.1
        with:
          crate: cargo-release
          version: latest
          use-tool-cache: true
      - name: Set git config
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
      - name: Remove tags and switch branch
        run: |
          git tag -d ${{ needs.prepare.outputs.tag }}
          git push origin :${{ needs.prepare.outputs.tag }}

          git fetch origin ${{ needs.prepare.outputs.branch }}
          git switch main ${{ needs.prepare.outputs.branch }}
      - uses: actions-rs/cargo@v1
        with:
          command: release
          args: -x --no-confirm ${{ needs.prepare.outputs.version }}
  upload:
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
          - x86_64-apple-darwin
          - aarch64-apple-darwin
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
    runs-on: ${{ matrix.os }}
    needs: [prepare, bump]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: ${{ matrix.target }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/${{ github.repository }}/releases/${{ needs.prepare.outputs.release_id }}/assets{?name,label}
          asset_path: ${{ github.workspace }}/target/${{ matrix.target }}/release/relations
          asset_name: relations-${{ needs.prepare.outputs.tag }}-${{ matrix.target }}
          asset_content_type: application/octet-stream
  publish-release:
    runs-on: ubuntu-latest
    needs: [prepare, bump, upload]
    steps:
      - uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            await github.rest.repos.updateRelease({
              owner: "${{ github.repository_owner }}",
              repo: "${{ github.event.repository.name }}",
              release_id: "${{ needs.prepare.outputs.release_id }}",
              tag_name: "${{ needs.prepare.outputs.tag }}",
              draft: false,
              prerelease: false,
            })
